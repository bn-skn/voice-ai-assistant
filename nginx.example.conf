# Конфигурация для HTTP (порт 80)
# Перенаправляем весь трафик на HTTPS
server {
    listen 80;
    server_name your_domain.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Конфигурация для HTTPS (порт 443)
server {
    listen 443 ssl http2;
    server_name your_domain.com;

    # Пути к вашим SSL сертификатам (полученным через Certbot)
    ssl_certificate /etc/letsencrypt/live/your_domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your_domain.com/privkey.pem;

    # Настройки безопасности SSL
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Добавляем HSTS заголовок для большей безопасности
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Скрытие версии Nginx
    server_tokens off;

    # ===== ОПТИМИЗАЦИИ ДЛЯ ГОЛОСОВОГО АССИСТЕНТА =====
    
    # Кэширование статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://localhost:3000;
    }

    # Основные настройки проксирования для API и динамического контента
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # ===== КРИТИЧНО: Настройки для WebSocket и низкой задержки =====
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Отключаем буферизацию для реального времени
        proxy_buffering off;
        proxy_cache off;
        
        # Быстрые таймауты для WebRTC
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 10s;
        
        # Отключаем сжатие для WebSocket
        gzip off;
        # ========================================
    }

    # ===== ДОПОЛНИТЕЛЬНЫЕ ОПТИМИЗАЦИИ =====
    
    # Защита от сканирования портов
    if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
        return 405;
    }
    
    # Отключаем логирование статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass http://localhost:3000;
    }
    
    # Сжатие для HTML/JSON/API ответов (но не для WebSocket)
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
} 