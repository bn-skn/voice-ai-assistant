#!/bin/bash

# üîß –°–ö–†–ò–ü–¢ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ò –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –†–û–¢–ê–¶–ò–ò –õ–û–ì–û–í
# –í–µ—Ä—Å–∏—è: Final (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤ production)
# –û–ø–∏—Å–∞–Ω–∏–µ: –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Ä–∞–∑–º–µ—Ä –ª–æ–≥–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—á–∏—â–∞–µ—Ç –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–æ–≤

# ========================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ========================================
PROJECT_DIR="/home/deployer/voice-ai-assistant"
LOGS_DIR="$PROJECT_DIR/logs"
MAX_LOG_SIZE_MB=100      # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö –ª–æ–≥–æ–≤ –≤ MB
DAYS_TO_KEEP=7           # –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏
CRITICAL_DISK_LEVEL=85   # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞ (%)

# ========================================
# –ü–†–û–í–ï–†–ö–ò –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
# ========================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
if [ ! -d "$LOGS_DIR" ]; then
  echo "$(date): ‚ùå Logs directory not found: $LOGS_DIR"
  exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã
LOG_SIZE=$(du -sm "$LOGS_DIR" 2>/dev/null | cut -f1)
DISK_USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ LOG_SIZE –Ω–µ –ø—É—Å—Ç–æ–π
if [ -z "$LOG_SIZE" ]; then
  LOG_SIZE=0
fi

echo "$(date): üìä Logs size: ${LOG_SIZE}MB, Disk usage: $DISK_USAGE%"

# ========================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –û–ß–ò–°–¢–ö–ê –õ–û–ì–û–í
# ========================================

if [ "$LOG_SIZE" -gt "$MAX_LOG_SIZE_MB" ]; then
  echo "üßπ Logs exceed ${MAX_LOG_SIZE_MB}MB, starting cleanup..."
  
  # –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π
  DELETED_OLD=$(find "$LOGS_DIR" -name "*.log" -mtime +$DAYS_TO_KEEP -delete -print | wc -l)
  if [ "$DELETED_OLD" -gt 0 ]; then
    echo "üóëÔ∏è  Deleted $DELETED_OLD old log files (older than $DAYS_TO_KEEP days)"
  fi
  
  # –û–±—Ä–µ–∑–∞–µ–º –±–æ–ª—å—à–∏–µ —Ñ–∞–π–ª—ã, –æ—Å—Ç–∞–≤–ª—è—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫
  BIG_FILES=$(find "$LOGS_DIR" -name "*.log" -size +10M)
  if [ -n "$BIG_FILES" ]; then
    echo "‚úÇÔ∏è  Truncating large log files..."
    find "$LOGS_DIR" -name "*.log" -size +10M -exec sh -c 'echo "Truncating: $1"; tail -1000 "$1" > "$1.tmp" && mv "$1.tmp" "$1"' _ {} \; 2>/dev/null
  fi
  
  # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä
  NEW_SIZE=$(du -sm "$LOGS_DIR" 2>/dev/null | cut -f1)
  echo "‚úÖ Cleanup completed: ${LOG_SIZE}MB ‚Üí ${NEW_SIZE}MB"
else
  echo "‚úÖ Log size is within limits (${LOG_SIZE}MB < ${MAX_LOG_SIZE_MB}MB)"
fi

# ========================================
# –ü–†–û–í–ï–†–ö–ê –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –î–ò–°–ö–ê
# ========================================

if [ "$DISK_USAGE" -gt "$CRITICAL_DISK_LEVEL" ]; then
  echo "üö® CRITICAL: Disk usage above ${CRITICAL_DISK_LEVEL}%! Consider immediate cleanup."
  
  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
  echo "üìä Top 5 largest directories:"
  du -h /home/deployer/voice-ai-assistant/ | sort -hr | head -5
else
  echo "‚úÖ Disk usage is normal (${DISK_USAGE}% < ${CRITICAL_DISK_LEVEL}%)"
fi

# ========================================
# –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
# ========================================

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤
LOG_COUNT=$(find "$LOGS_DIR" -name "*.log" | wc -l)
echo "üìÅ Total log files: $LOG_COUNT"

# –°–∞–º—ã–π –±–æ–ª—å—à–æ–π –ª–æ–≥ —Ñ–∞–π–ª
if [ "$LOG_COUNT" -gt 0 ]; then
  LARGEST_LOG=$(find "$LOGS_DIR" -name "*.log" -exec ls -lh {} \; | sort -k5 -hr | head -1 | awk '{print $9 " (" $5 ")"}')
  echo "üìÑ Largest log file: $(basename "$LARGEST_LOG")"
fi

echo "üìä Monitoring completed successfully"

# ========================================
# –£–°–¢–ê–ù–û–í–ö–ê –ò –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
# ========================================
# 
# 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä: chmod +x monitor_logs.sh
# 2. –î–æ–±–∞–≤—å—Ç–µ –≤ cron –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:
#    crontab -e
#    # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00
#    0 9 * * * /path/to/monitor_logs.sh >> ~/monitor.log 2>&1
# 
# 3. –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: ./monitor_logs.sh
# 4. –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏: tail -f ~/monitor.log
# ======================================== 