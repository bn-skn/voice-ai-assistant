#!/bin/bash

# üì¶ –°–ö–†–ò–ü–¢ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –ë–≠–ö–ê–ü–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô
# –í–µ—Ä—Å–∏—è: Final (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤ production)
# –û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞–µ—Ç –∞—Ä—Ö–∏–≤—ã –≤–∞–∂–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤

# ========================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# ========================================
BACKUP_DIR="/root/backups"
PROJECT_DIR="/home/deployer/voice-ai-assistant"
DATE=$(date +%Y%m%d_%H%M%S)
MAX_BACKUPS_TO_KEEP=30  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è

# ========================================
# –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
# ========================================

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤
mkdir -p "$BACKUP_DIR"

if [ ! -d "$BACKUP_DIR" ]; then
  echo "‚ùå Cannot create backup directory: $BACKUP_DIR"
  exit 1
fi

echo "üì¶ Starting configuration backup: $(date)"
echo "üìÅ Backup directory: $BACKUP_DIR"

# ========================================
# –°–ü–ò–°–û–ö –§–ê–ô–õ–û–í –î–õ–Ø –ë–≠–ö–ê–ü–ê
# ========================================

BACKUP_FILES=(
  "/etc/nginx/sites-available/myvoiceai.ru"              # Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  "$PROJECT_DIR/.env.local"                              # Environment –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
  "$PROJECT_DIR/docker-compose.yml"                      # Docker –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  "/etc/fail2ban/jail.local"                            # Fail2ban –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
  "/etc/crontab"                                         # Cron –∑–∞–¥–∞—á–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
OPTIONAL_FILES=(
  "$PROJECT_DIR/next.config.ts"                         # Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  "$PROJECT_DIR/nginx.production.conf"                  # –®–∞–±–ª–æ–Ω Nginx
  "/root/monitor_logs.sh"                               # –°–∫—Ä–∏–ø—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
  "/root/backup_config.sh"                              # –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç
)

# ========================================
# –°–û–ó–î–ê–ù–ò–ï –ë–≠–ö–ê–ü–ê
# ========================================

BACKUP_FILE="$BACKUP_DIR/config_backup_$DATE.tar.gz"
TEMP_LIST="/tmp/backup_files_$DATE.list"

# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤
> "$TEMP_LIST"

echo "üîç Checking files for backup:"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
for file in "${BACKUP_FILES[@]}"; do
  if [ -f "$file" ]; then
    echo "‚úÖ Found: $file"
    echo "$file" >> "$TEMP_LIST"
  else
    echo "‚ö†Ô∏è  Missing: $file"
  fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
for file in "${OPTIONAL_FILES[@]}"; do
  if [ -f "$file" ]; then
    echo "üìé Optional: $file"
    echo "$file" >> "$TEMP_LIST"
  fi
done

# –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
if [ -s "$TEMP_LIST" ]; then
  echo "üì¶ Creating backup archive..."
  
  tar -czf "$BACKUP_FILE" -T "$TEMP_LIST" 2>/dev/null
  
  if [ $? -eq 0 ]; then
    echo "‚úÖ Backup created successfully: config_backup_$DATE.tar.gz"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    BACKUP_SIZE=$(ls -lh "$BACKUP_FILE" | awk '{print $5}')
    echo "üìä Backup size: $BACKUP_SIZE"
    
    echo "üìÑ Backup contents:"
    tar -tzf "$BACKUP_FILE" | sed 's/^/   /'
    
  else
    echo "‚ùå Backup creation failed!"
    rm -f "$BACKUP_FILE" "$TEMP_LIST"
    exit 1
  fi
else
  echo "‚ùå No files found for backup!"
  rm -f "$TEMP_LIST"
  exit 1
fi

# –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm -f "$TEMP_LIST"

# ========================================
# –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –ë–≠–ö–ê–ü–û–í
# ========================================

echo "üßπ Cleaning old backups (keeping last $MAX_BACKUPS_TO_KEEP)..."

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –±—ç–∫–∞–ø—ã
CURRENT_BACKUPS=$(ls -1t "$BACKUP_DIR"/config_backup_*.tar.gz 2>/dev/null | wc -l)

if [ "$CURRENT_BACKUPS" -gt "$MAX_BACKUPS_TO_KEEP" ]; then
  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã
  DELETED=$(ls -1t "$BACKUP_DIR"/config_backup_*.tar.gz 2>/dev/null | tail -n +$((MAX_BACKUPS_TO_KEEP + 1)) | xargs rm -f)
  REMAINING=$(ls -1 "$BACKUP_DIR"/config_backup_*.tar.gz 2>/dev/null | wc -l)
  echo "üóëÔ∏è  Cleaned old backups. Remaining: $REMAINING"
else
  echo "‚úÖ No cleanup needed. Current backups: $CURRENT_BACKUPS"
fi

# ========================================
# –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê
# ========================================

echo "üìä Backup statistics:"
echo "   üìÅ Total backups: $(ls -1 "$BACKUP_DIR"/config_backup_*.tar.gz 2>/dev/null | wc -l)"
echo "   üíæ Total backup size: $(du -sh "$BACKUP_DIR" 2>/dev/null | cut -f1)"
echo "   üìÖ Latest backup: config_backup_$DATE.tar.gz"

echo "‚úÖ Backup completed successfully: $(date)"

# ========================================
# –£–°–¢–ê–ù–û–í–ö–ê –ò –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
# ========================================
# 
# 1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä: chmod +x backup_config.sh
# 2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫:
#    crontab -e
#    # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ 2:00
#    0 2 * * 0 /path/to/backup_config.sh >> ~/backup.log 2>&1
# 
# 3. –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: ./backup_config.sh
# 4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: tar -xzf config_backup_YYYYMMDD_HHMMSS.tar.gz -C /
# 5. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: tail -f ~/backup.log
# ======================================== 