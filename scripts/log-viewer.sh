#!/bin/bash

# üìä Log Viewer –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
# –£–¥–æ–±–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –ü—É—Ç—å –∫ –ª–æ–≥–∞–º
LOG_DIR="logs"
TODAY=$(date +%Y-%m-%d)

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${CYAN}üìä Log Viewer –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]"
    echo ""
    echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥—ã:${NC}"
    echo "  live          - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  errors        - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏"
    echo "  sessions      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–µ—Å—Å–∏–π"
    echo "  api           - –ü–æ–∫–∞–∑–∞—Ç—å HTTP –∑–∞–ø—Ä–æ—Å—ã"
    echo "  performance   - –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"
    echo "  search TEXT   - –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É –≤ –ª–æ–≥–∞—Ö"
    echo "  stats         - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤"
    echo "  tail [N]      - –ü–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50)"
    echo "  clean         - –û—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏"
    echo ""
    echo -e "${YELLOW}–û–ø—Ü–∏–∏:${NC}"
    echo "  -d DATE       - –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–µ–≥–æ–¥–Ω—è)"
    echo "  -f            - –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ñ–∞–π–ª–æ–º (–∫–∞–∫ tail -f)"
    echo "  -h            - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo -e "${YELLOW}–ü—Ä–∏–º–µ—Ä—ã:${NC}"
    echo "  $0 live                    # –õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  $0 errors -d 2024-01-15   # –û—à–∏–±–∫–∏ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É"
    echo "  $0 search \"session\"       # –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É session"
    echo "  $0 api -f                 # HTTP –∑–∞–ø—Ä–æ—Å—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ª–æ–≥–æ–≤
check_logs_dir() {
    if [ ! -d "$LOG_DIR" ]; then
        echo -e "${RED}‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $LOG_DIR${NC}"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏ —Å–æ–∑–¥–∞–µ—Ç –ª–æ–≥–∏."
        exit 1
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤
get_log_file() {
    local log_type="$1"
    local date="${2:-$TODAY}"
    echo "$LOG_DIR/${log_type}-${date}.log"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
check_log_file() {
    local file="$1"
    if [ ! -f "$file" ]; then
        echo -e "${RED}‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $file${NC}"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:"
        ls -la "$LOG_DIR"/*.log 2>/dev/null || echo "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤"
        exit 1
    fi
}

# –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ JSON –ª–æ–≥–æ–≤
pretty_json() {
    if command -v jq >/dev/null 2>&1; then
        jq -C '.'
    else
        # –ï—Å–ª–∏ jq –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–∞—è —Ä–∞—Å–∫—Ä–∞—Å–∫–∞
        sed -E "s/\"level\":\"error\"/$(printf "${RED}")&$(printf "${NC}")/g" | \
        sed -E "s/\"level\":\"warn\"/$(printf "${YELLOW}")&$(printf "${NC}")/g" | \
        sed -E "s/\"level\":\"info\"/$(printf "${GREEN}")&$(printf "${NC}")/g" | \
        sed -E "s/\"message\":\"([^\"]*)\"/$(printf "${CYAN}")&$(printf "${NC}")/g"
    fi
}

# –ñ–∏–≤—ã–µ –ª–æ–≥–∏ (–≤—Å–µ)
live_logs() {
    local date="${1:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${GREEN}üì° –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏...${NC}"
    echo -e "${YELLOW}–§–∞–π–ª: $combined_log${NC}"
    echo -e "${BLUE}–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞${NC}"
    echo ""
    
    if [ -f "$combined_log" ]; then
        tail -f "$combined_log" | while read line; do
            echo "$line" | pretty_json
        done
    else
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤...${NC}"
        touch "$combined_log"
        tail -f "$combined_log" | while read line; do
            echo "$line" | pretty_json
        done
    fi
}

# –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏
show_errors() {
    local date="${1:-$TODAY}"
    local error_log=$(get_log_file "error" "$date")
    
    echo -e "${RED}üö® –û—à–∏–±–∫–∏ –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$error_log" ]; then
        cat "$error_log" | pretty_json
    else
        echo -e "${GREEN}‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!${NC}"
    fi
}

# –õ–æ–≥–∏ —Å–µ—Å—Å–∏–π
show_sessions() {
    local date="${1:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${PURPLE}üë• –õ–æ–≥–∏ —Å–µ—Å—Å–∏–π –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$combined_log" ]; then
        grep -E "(Session created|Session ended|User added to queue)" "$combined_log" | pretty_json
    else
        echo -e "${YELLOW}üìù –õ–æ–≥–æ–≤ —Å–µ—Å—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
}

# HTTP –∑–∞–ø—Ä–æ—Å—ã
show_api() {
    local date="${1:-$TODAY}"
    local http_log=$(get_log_file "http" "$date")
    local follow="$2"
    
    echo -e "${BLUE}üåê HTTP –∑–∞–ø—Ä–æ—Å—ã –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$http_log" ]; then
        if [ "$follow" = "-f" ]; then
            tail -f "$http_log" | pretty_json
        else
            cat "$http_log" | pretty_json
        fi
    else
        echo -e "${YELLOW}üìù HTTP –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
}

# –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
show_performance() {
    local date="${1:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${YELLOW}üêå –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$combined_log" ]; then
        grep -E "(Performance:|\"slow\":true)" "$combined_log" | pretty_json
    else
        echo -e "${GREEN}‚ö° –ú–µ–¥–ª–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
}

# –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
search_logs() {
    local search_term="$1"
    local date="${2:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${CYAN}üîç –ü–æ–∏—Å–∫ '$search_term' –≤ –ª–æ–≥–∞—Ö –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$combined_log" ]; then
        grep -i "$search_term" "$combined_log" | pretty_json
    else
        echo -e "${YELLOW}üìù –õ–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
}

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤
show_stats() {
    local date="${1:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${CYAN}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ª–æ–≥–æ–≤ –∑–∞ $date${NC}"
    echo ""
    
    if [ ! -f "$combined_log" ]; then
        echo -e "${YELLOW}üìù –õ–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        return
    fi
    
    echo -e "${YELLOW}–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:${NC}"
    echo "  –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: $(wc -l < "$combined_log")"
    echo "  –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h "$combined_log" | cut -f1)"
    echo ""
    
    echo -e "${YELLOW}–ü–æ —É—Ä–æ–≤–Ω—è–º:${NC}"
    echo "  –û—à–∏–±–∫–∏:      $(grep -c '"level":"error"' "$combined_log" 2>/dev/null || echo 0)"
    echo "  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $(grep -c '"level":"warn"' "$combined_log" 2>/dev/null || echo 0)"
    echo "  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:  $(grep -c '"level":"info"' "$combined_log" 2>/dev/null || echo 0)"
    echo "  HTTP:        $(grep -c '"level":"http"' "$combined_log" 2>/dev/null || echo 0)"
    echo "  –û—Ç–ª–∞–¥–∫–∞:     $(grep -c '"level":"debug"' "$combined_log" 2>/dev/null || echo 0)"
    echo ""
    
    echo -e "${YELLOW}–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:${NC}"
    echo "  –°–µ—Å—Å–∏–π —Å–æ–∑–¥–∞–Ω–æ: $(grep -c "Session created" "$combined_log" 2>/dev/null || echo 0)"
    echo "  –°–µ—Å—Å–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ: $(grep -c "Session ended" "$combined_log" 2>/dev/null || echo 0)"
    echo "  API –∑–∞–ø—Ä–æ—Å–æ–≤: $(grep -c "Request started" "$combined_log" 2>/dev/null || echo 0)"
    echo ""
    
    echo -e "${YELLOW}–¢–æ–ø –æ—à–∏–±–æ–∫:${NC}"
    if [ -f "$(get_log_file "error" "$date")" ]; then
        grep -o '"message":"[^"]*"' "$(get_log_file "error" "$date")" 2>/dev/null | \
        sort | uniq -c | sort -nr | head -5 | \
        while read count message; do
            echo "  $count √ó $message"
        done
    else
        echo "  –û—à–∏–±–æ–∫ –Ω–µ—Ç ‚úÖ"
    fi
}

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫
show_tail() {
    local lines="${1:-50}"
    local date="${2:-$TODAY}"
    local combined_log=$(get_log_file "combined" "$date")
    
    echo -e "${GREEN}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ $lines –∑–∞–ø–∏—Å–µ–π –∑–∞ $date${NC}"
    echo ""
    
    if [ -f "$combined_log" ]; then
        tail -n "$lines" "$combined_log" | pretty_json
    else
        echo -e "${YELLOW}üìù –õ–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤
clean_logs() {
    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ª–æ–≥–æ–≤...${NC}"
    
    # –£–¥–∞–ª—è–µ–º –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find "$LOG_DIR" -name "*.log" -mtime +30 -type f | while read file; do
        echo "–£–¥–∞–ª—è—é: $file"
        rm "$file"
    done
    
    # –£–¥–∞–ª—è–µ–º —Å–∂–∞—Ç—ã–µ –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 90 –¥–Ω–µ–π
    find "$LOG_DIR" -name "*.gz" -mtime +90 -type f | while read file; do
        echo "–£–¥–∞–ª—è—é: $file"
        rm "$file"
    done
    
    echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
    echo ""
    echo -e "${CYAN}–¢–µ–∫—É—â–∏–µ —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤:${NC}"
    ls -lah "$LOG_DIR"/*.log 2>/dev/null || echo "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    check_logs_dir
    
    local command="$1"
    local date="$TODAY"
    local follow_flag=""
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            -d|--date)
                date="$2"
                shift 2
                ;;
            -f|--follow)
                follow_flag="-f"
                shift
                ;;
            -h|--help)
                show_help
                exit 0
                ;;
            *)
                break
                ;;
        esac
    done
    
    case "$command" in
        live)
            live_logs "$date"
            ;;
        errors)
            show_errors "$date"
            ;;
        sessions)
            show_sessions "$date"
            ;;
        api)
            show_api "$date" "$follow_flag"
            ;;
        performance)
            show_performance "$date"
            ;;
        search)
            if [ -z "$2" ]; then
                echo -e "${RED}‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞${NC}"
                exit 1
            fi
            search_logs "$2" "$date"
            ;;
        stats)
            show_stats "$date"
            ;;
        tail)
            show_tail "$2" "$date"
            ;;
        clean)
            clean_logs
            ;;
        ""|help)
            show_help
            ;;
        *)
            echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command${NC}"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@" 